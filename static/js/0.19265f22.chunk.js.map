{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","hooks/api.js","components/Row.js","components/Button.js","components/Padding.js","components/Feed.js","hooks/document.js","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/@babel/runtime/node_modules/regenerator-runtime/runtime-module.js","../node_modules/@babel/runtime/node_modules/regenerator-runtime/runtime.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_objectSpread","target","i","arguments","length","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","forEach","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","apply","err","undefined","_slicedToArray","arr","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","_s","_i","Symbol","iterator","next","push","_iterableToArrayLimit","TypeError","_nonIterableRest","STATUSES","refreshing","loadingMore","idle","actions","refresh","loadMore","refreshed","loadedMore","abortErrorName","abortController","useApi","path","_useReducer2","useReducer","reducer","status","items","page","state","dispatch","useCallback","regenerator_default","a","mark","_callee","newPage","newItems","wrap","_context","prev","type","load","sent","t0","name","console","stop","_callee2","_context2","useEffect","abort","action","reconciledItems","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_loop","item","find","el","id","_iterator","return","_callee3","res","_context3","AbortController","fetch","signal","abrupt","json","styled","div","withConfig","displayName","componentId","_ref","crossAxisAlignment","button","Padding","children","_ref$padding","padding","left","style","paddingRight","right","paddingLeft","react_default","createElement","List","ul","ListItem","li","ItemContent","ItemLink","ItemSubtitle","span","Feed","title","onRefresh","onLoadMore","useDocumentTitle","Fragment","Row","Title","Spinner","Button","onClick","fa","map","_ref2","link","points","responseCount","author","description","href","Center","__webpack_require__","d","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","document","module","exports","g","Function","hadRuntime","regeneratorRuntime","getOwnPropertyNames","indexOf","oldRuntime","e","global","Op","prototype","hasOwn","hasOwnProperty","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","runtime","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","call","Gp","GeneratorFunctionPrototype","Generator","create","GeneratorFunction","constructor","isGeneratorFunction","genFun","ctor","setPrototypeOf","__proto__","awrap","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","tryLocsList","iter","result","toString","object","reverse","pop","Context","reset","skipTempReset","_sent","delegate","method","tryEntries","resetTryEntry","charAt","isNaN","slice","rootRecord","completion","rval","dispatchException","exception","context","handle","loc","caught","record","entry","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","Error","finallyEntry","complete","afterLoc","finish","catch","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","doneResult","delegateResult","maybeInvokeDelegate","tryCatch","makeInvokeMethod","previousPromise","callInvokeWithMethodAndArg","invoke","unwrapped","pushTryEntry","locs","iteratorMethod"],"mappings":"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","file":"static/js/0.19265f22.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import { useEffect, useReducer, useCallback } from \"react\";\n\nexport const STATUSES = {\n  refreshing: \"refreshing\",\n  loadingMore: \"loadingMore\",\n  idle: \"idle\"\n};\n\nconst actions = {\n  refresh: \"refresh\",\n  loadMore: \"loadMore\",\n  refreshed: \"refreshed\",\n  loadedMore: \"loadedMore\",\n  idle: \"idle\"\n};\n\nconst abortErrorName = \"AbortError\";\n\nlet abortController = null;\n\nexport function useApi(path) {\n  const [state, dispatch] = useReducer(reducer, {\n    status: STATUSES.refreshing,\n    items: [],\n    page: 1\n  });\n  const refresh = useCallback(async () => {\n    dispatch({\n      type: actions.refresh\n    });\n    const newPage = 1;\n    try {\n      const newItems = await load(path, newPage);\n      dispatch({ type: actions.refreshed, items: newItems, page: newPage });\n    } catch (err) {\n      if (err.name !== abortErrorName) {\n        dispatch({ type: actions.idle });\n        console.error(err);\n      }\n    }\n  }, [dispatch, path]);\n  const loadMore = useCallback(async () => {\n    dispatch({ type: actions.loadMore });\n    const newPage = state.page + 1;\n    try {\n      const newItems = await load(path, newPage);\n      dispatch({\n        type: actions.loadedMore,\n        page: newPage,\n        items: newItems\n      });\n    } catch (err) {\n      if (err.name !== abortErrorName) {\n        dispatch({ type: actions.idle });\n        console.error(err);\n      }\n    }\n  }, [dispatch, path, state.page]);\n\n  useEffect(() => {\n    refresh();\n\n    return () => {\n      if (abortController) {\n        abortController.abort();\n        abortController = null;\n      }\n    };\n  }, [refresh]);\n\n  return {\n    items: state.items,\n    status: state.status,\n    refresh,\n    loadMore\n  };\n}\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case actions.refresh:\n      return {\n        ...state,\n        status: STATUSES.refreshing\n      };\n    case actions.loadMore:\n      return {\n        ...state,\n        status: STATUSES.loadingMore\n      };\n    case actions.refreshed:\n      return {\n        ...state,\n        status: STATUSES.idle,\n        items: action.items,\n        page: action.page\n      };\n    case actions.loadedMore:\n      // De-duplicate the arrays\n      const reconciledItems = state.items;\n      for (let item of action.items) {\n        if (!state.items.find(el => el.id === item.id)) {\n          reconciledItems.push(item);\n        }\n      }\n      return {\n        ...state,\n        status: STATUSES.idle,\n        items: reconciledItems,\n        page: action.page\n      };\n    case actions.idle:\n      return {\n        ...state,\n        status: STATUSES.idle\n      };\n    default:\n      return state;\n  }\n}\n\nasync function load(path, page) {\n  if (abortController) {\n    abortController.abort();\n  }\n  abortController = new AbortController();\n  const res = await fetch(\n    `https://informatif-api.herokuapp.com/api/v1/${path}?page=${page}`,\n    {\n      signal: abortController.signal\n    }\n  );\n  return res.json();\n}\n","import styled from \"styled-components/macro\";\n\nexport default styled.div`\n  display: flex;\n  align-items: ${({ crossAxisAlignment }) => crossAxisAlignment};\n`;\n","import styled from \"styled-components/macro\";\n\nexport default styled.button`\n  align-items: center;\n  background-color: var(--background-color);\n  border: 1px solid var(--text-color);\n  border-radius: 4px;\n  color: var(--text-color);\n  display: inline-flex;\n  padding: 4px;\n  transition: background-color 80ms ease-out;\n\n  :hover {\n    background-color: var(--text-color);\n    color: var(--background-color);\n    cursor: pointer;\n  }\n`;\n","import React from \"react\";\n\nexport default function Padding({ children, padding = {} }) {\n  const { left, right } = padding;\n  const style = {\n    paddingRight: right,\n    paddingLeft: left\n  };\n  return <span style={style}>{children}</span>;\n}\n","import React from \"react\";\nimport styled from \"styled-components/macro\";\nimport {\n  FaRegCommentAlt,\n  FaSyncAlt,\n  FaRegArrowAltCircleUp\n} from \"react-icons/fa\";\nimport Center from \"./Center\";\nimport Title from \"./Title\";\nimport Row from \"./Row\";\nimport Spinner from \"./Spinner\";\nimport Button from \"./Button\";\nimport Padding from \"./Padding\";\nimport { STATUSES } from \"../hooks/api\";\nimport { useDocumentTitle } from \"../hooks/document\";\n\nconst List = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0 8px;\n`;\n\nconst ListItem = styled.li`\n  align-items: center;\n  display: flex;\n  min-height: 48px;\n  padding: 4px 0;\n`;\n\nconst ItemContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n`;\n\nconst ItemLink = styled.a`\n  color: var(--primary-color);\n  text-decoration: none;\n`;\n\nconst ItemSubtitle = styled.span`\n  opacity: 0.8;\n  font-size: 0.8rem;\n`;\n\nexport default function Feed({ status, items, title, onRefresh, onLoadMore }) {\n  useDocumentTitle(title);\n\n  return (\n    <>\n      <Row crossAxisAlignment=\"center\">\n        <Padding padding={{ left: \"8px\", right: \"8px\" }}>\n          <Title>{title}</Title>\n        </Padding>\n        {status === STATUSES.refreshing ? (\n          <Spinner />\n        ) : (\n          <Button onClick={onRefresh} title=\"Refresh\">\n            <FaSyncAlt />\n          </Button>\n        )}\n      </Row>\n      <List>\n        {items.map(\n          ({ link, title, points, responseCount, id, author, description }) => (\n            <ListItem key={id}>\n              <ItemContent>\n                <Title>\n                  <ItemLink href={link} title=\"Title\">\n                    {title} {description && `— ${description}`}\n                  </ItemLink>\n                </Title>\n                <div>\n                  <ItemSubtitle title=\"Author\">{author}</ItemSubtitle>\n                  {points != null && (\n                    <>\n                      <span> • </span>\n                      <ItemSubtitle title=\"Points\">\n                        {points} <FaRegArrowAltCircleUp />\n                      </ItemSubtitle>\n                    </>\n                  )}\n                  {responseCount != null && (\n                    <>\n                      <span> • </span>\n                      <ItemSubtitle title=\"Responses\">\n                        {responseCount} <FaRegCommentAlt />\n                      </ItemSubtitle>\n                    </>\n                  )}\n                </div>\n              </ItemContent>\n            </ListItem>\n          )\n        )}\n      </List>\n      <Center>\n        {status === STATUSES.loadingMore && <Spinner />}\n        {onLoadMore && status === STATUSES.idle && (\n          <Button onClick={onLoadMore}>Load more</Button>\n        )}\n      </Center>\n    </>\n  );\n}\n","import { useEffect } from \"react\";\n\nexport function useDocumentTitle(title) {\n  useEffect(() => {\n    document.title = `Informatif — ${title}`;\n  }, [title]);\n}\n","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() {\n  return this || (typeof self === \"object\" && self);\n})() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() {\n    return this || (typeof self === \"object\" && self);\n  })() || Function(\"return this\")()\n);\n"],"sourceRoot":""}