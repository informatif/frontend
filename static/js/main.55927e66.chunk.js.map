{"version":3,"sources":["components/Center.js","components/Title.js","components/Spinner.js","components/Column.js","components/AppNavLink.js","components/DarkModeToggle.js","components/Footer.js","components/Margin.js","components/ErrorBoundary.js","App.js","serviceWorker.js","index.js"],"names":["styled","div","withConfig","displayName","componentId","span","_ref","colored","spin","keyframes","_templateObject","FaSpinner","crossAxisAlignment","activeClassName","StyledAppNavLink","NavLink","AppNavLink","children","title","to","react_default","a","createElement","exact","StyledDarkModeToggle","label","Icon","Checkbox","input","DarkModeToggle","_useDarkMode","useDarkMode","value","toggle","type","onChange","StyledFooter","footer","Footer","className","fa","Margin","margin","style","ErrorBoundary","state","hasError","this","Column","size","props","Component","HackerNewsFeed","lazy","Promise","all","__webpack_require__","e","then","bind","GitHubFeed","StackOverflowFeed","RedditFeed","GlobalNewsFeed","NoMatch","App","react_router_dom","Center","Title","react","fallback","Spinner","ErrorBoundary_ErrorBoundary","react_router","from","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","unstable_createRoot","document","getElementById","render","src_App","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"oGAEeA,QAAOC,IAAtBC,WAAA,CAAAC,YAAA,SAAAC,YAAA,YAAeJ,CAAf,yGCAeA,QAAOK,KAAtBH,WAAA,CAAAC,YAAA,QAAAC,YAAA,YAAeJ,CAAf,6CAEW,SAAAM,GAAA,OAAAA,EAAGC,SAAyB,uPCDvC,IAAMC,EAAOC,YAAHC,KAUKV,gBAAOW,KAAtBT,WAAA,CAAAC,YAAA,UAAAC,YAAA,gBAAeJ,CAAf,sCACeQ,+CCZAR,QAAOC,IAAtBC,WAAA,CAAAC,YAAA,SAAAC,YAAA,gBAAeJ,CAAf,wDACiB,SAAAM,GAAA,OAAAA,EAAGM,uMCCdC,EAAkB,uBAElBC,EAAmBd,YAAOe,KAAVb,WAAA,CAAAC,YAAA,+BAAAC,YAAA,gBAAGJ,CAAH,qLAWhBa,GAKS,SAASG,EAATV,GAA6C,IAAvBW,EAAuBX,EAAvBW,SAAUC,EAAaZ,EAAbY,MAAOC,EAAMb,EAANa,GACpD,OACEC,EAAAC,EAAAC,cAACR,EAAD,CACES,OAAK,EACLJ,GAAIA,EACJN,gBAAiBA,EACjBK,MAAOA,GAEND,eC1BDO,EAAuBxB,IAAOyB,MAAVvB,WAAA,CAAAC,YAAA,uCAAAC,YAAA,YAAGJ,CAAH,oBAIpB0B,EAAO1B,IAAOK,KAAVH,WAAA,CAAAC,YAAA,uBAAAC,YAAA,YAAGJ,CAAH,8CAQJ2B,EAAW3B,IAAO4B,MAAV1B,WAAA,CAAAC,YAAA,2BAAAC,YAAA,YAAGJ,CAAH,kDAOC,SAAS6B,IAAiB,IAAAC,EACbC,aAAY,GAA9BC,EAD+BF,EAC/BE,MAAOC,EADwBH,EACxBG,OAEf,OACEb,EAAAC,EAAAC,cAACE,EAAD,CAAsBN,MAAM,kBAC1BE,EAAAC,EAAAC,cAACK,EAAD,CAAUO,KAAK,WAAWC,SAAUF,IACpCb,EAAAC,EAAAC,cAACI,EAAD,KAAOM,EAAQ,eAAO,iBCjB5B,IAAMI,EAAepC,IAAOqC,OAAVnC,WAAA,CAAAC,YAAA,uBAAAC,YAAA,gBAAGJ,CAAH,wPAeH,SAASsC,EAAThC,GAA+BA,EAAbiC,UAC/B,OACEnB,EAAAC,EAAAC,cAACc,EAAD,KACEhB,EAAAC,EAAAC,cAACO,EAAD,MACAT,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACN,EAAD,CAAYG,GAAG,MAAMD,MAAM,eACzBE,EAAAC,EAAAC,cAACkB,EAAA,EAAD,OAEFpB,EAAAC,EAAAC,cAACN,EAAD,CAAYG,GAAG,MAAMD,MAAM,UACzBE,EAAAC,EAAAC,cAACkB,EAAA,EAAD,OAEFpB,EAAAC,EAAAC,cAACN,EAAD,CAAYG,GAAG,MAAMD,MAAM,kBACzBE,EAAAC,EAAAC,cAACkB,EAAA,EAAD,OAEFpB,EAAAC,EAAAC,cAACN,EAAD,CAAYG,GAAG,UAAUD,MAAM,UAC7BE,EAAAC,EAAAC,cAACkB,EAAA,EAAD,OAEFpB,EAAAC,EAAAC,cAACN,EAAD,CAAYG,GAAG,UAAUD,MAAM,eAC7BE,EAAAC,EAAAC,cAACkB,EAAA,EAAD,SC3CK,SAASC,EAATnC,GAA4B,IAAVoC,EAAUpC,EAAVoC,OAC/B,OACEtB,EAAAC,EAAAC,cAAA,OACEqB,MAAO,CACLD,wECFaE,6MACnBC,MAAQ,CACNC,UAAU,2EAUV,OAAIC,KAAKF,MAAMC,SAEX1B,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CAAQpC,mBAAmB,UACzBQ,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAcS,KAAK,SACnB7B,EAAAC,EAAAC,cAAA,oDAICyB,KAAKG,MAAMjC,8DAdlB,MAAO,CACL6B,UAAU,UAP2BK,aCKrCC,EAAiBC,eAAK,kBAAMC,QAAAC,IAAA,CAAAC,EAAAC,EAAA,GAAAD,EAAAC,EAAA,KAAAC,KAAAF,EAAAG,KAAA,YAC5BC,EAAaP,eAAK,kBAAMC,QAAAC,IAAA,CAAAC,EAAAC,EAAA,GAAAD,EAAAC,EAAA,KAAAC,KAAAF,EAAAG,KAAA,YACxBE,EAAoBR,eAAK,kBAAMC,QAAAC,IAAA,CAAAC,EAAAC,EAAA,GAAAD,EAAAC,EAAA,KAAAC,KAAAF,EAAAG,KAAA,YAC/BG,EAAaT,eAAK,kBAAMC,QAAAC,IAAA,CAAAC,EAAAC,EAAA,GAAAD,EAAAC,EAAA,KAAAC,KAAAF,EAAAG,KAAA,YACxBI,EAAiBV,eAAK,kBAAMC,QAAAC,IAAA,CAAAC,EAAAC,EAAA,GAAAD,EAAAC,EAAA,KAAAC,KAAAF,EAAAG,KAAA,YAC5BK,EAAUX,eAAK,kBAAMG,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,YAiCZM,EA/BH,kBACV7C,EAAAC,EAAAC,cAAC4C,EAAA,EAAD,KACE9C,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,KACE/C,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAO7D,SAAO,GACZa,EAAAC,EAAAC,cAAA,0BAGJF,EAAAC,EAAAC,cAAC+C,EAAA,SAAD,CACEC,SACElD,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,KACE/C,EAAAC,EAAAC,cAACiD,EAAA,EAAD,QAIJnD,EAAAC,EAAAC,cAACkD,EAAD,KACEpD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,KACErD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAUlD,OAAK,EAACmD,KAAK,IAAIvD,GAAG,QAC5BC,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAOlD,OAAK,EAACoD,KAAK,MAAMC,UAAWxB,IACnChC,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAOlD,OAAK,EAACoD,KAAK,MAAMC,UAAWhB,IACnCxC,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAOlD,OAAK,EAACoD,KAAK,MAAMC,UAAWf,IACnCzC,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAOlD,OAAK,EAACoD,KAAK,UAAUC,UAAWd,IACvC1C,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAOlD,OAAK,EAACoD,KAAK,UAAUC,UAAWb,IACvC3C,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CAAOG,UAAWZ,OAIxB5C,EAAAC,EAAAC,cAACmB,EAAD,CAAQC,OAAO,SACftB,EAAAC,EAAAC,cAACgB,EAAD,QC/BEuC,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACT1B,KAAK,SAAA+B,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB9C,QACfyC,UAAUC,cAAcO,YAI1BC,QAAQC,IACN,gHAKEX,GAAUA,EAAOY,UACnBZ,EAAOY,SAASR,KAMlBM,QAAQC,IAAI,sCAGRX,GAAUA,EAAOa,WACnBb,EAAOa,UAAUT,UAO5BU,MAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,KC1FjEC,8BAAoBC,SAASC,eAAe,SAASC,OAAOpF,EAAAC,EAAAC,cAACmF,EAAD,ODgBrD,SAAkBpB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIoB,IAAIC,IAAwB5B,OAAOC,SAAS4B,MACpDC,SAAW9B,OAAOC,SAAS6B,OAIvC,OAGF9B,OAAO+B,iBAAiB,OAAQ,WAC9B,IAAM1B,EAAK,GAAA2B,OAAMJ,IAAN,sBAEP9B,GAgEV,SAAiCO,EAAOC,GAEtC2B,MAAM5B,GACH1B,KAAK,SAAAuD,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5ChC,UAAUC,cAAcgC,MAAM7D,KAAK,SAAA+B,GACjCA,EAAa+B,aAAa9D,KAAK,WAC7BqB,OAAOC,SAASyC,aAKpBtC,EAAgBC,EAAOC,KAG1Bc,MAAM,WACLJ,QAAQC,IACN,mEArFA0B,CAAwBtC,EAAOC,GAI/BC,UAAUC,cAAcgC,MAAM7D,KAAK,WACjCqC,QAAQC,IACN,+GAMJb,EAAgBC,EAAOC,MCvC/BE","file":"static/js/main.55927e66.chunk.js","sourcesContent":["import styled from \"styled-components/macro\";\n\nexport default styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: center;\n`;\n","import styled from \"styled-components/macro\";\n\nexport default styled.span`\n  font-family: Bitter, sans-serif;\n  color: ${({ colored }) => colored && \"var(--primary-color)\"};\n`;\n","import styled, { keyframes } from \"styled-components/macro\";\nimport { FaSpinner } from \"react-icons/fa\";\n\nconst spin = keyframes`\n  from {\n    transform: rotate(0turn);\n  }\n\n  to {\n    transform: rotate(1turn);\n  }\n`;\n\nexport default styled(FaSpinner)`\n  animation: ${spin} infinite 2s linear;\n`;\n","import styled from \"styled-components/macro\";\n\nexport default styled.div`\n  align-items: ${({ crossAxisAlignment }) => crossAxisAlignment};\n  display: flex;\n  flex-direction: column;\n`;\n","import React from \"react\";\nimport styled from \"styled-components/macro\";\nimport { NavLink } from \"react-router-dom\";\n\nconst activeClassName = \"AppNavLink--selected\";\n\nconst StyledAppNavLink = styled(NavLink)`\n  color: var(--text-color);\n  font-size: 1.5rem;\n  padding: 0 8px;\n  text-decoration: none;\n  transition: color 80ms ease-out;\n\n  :hover {\n    color: var(--primary-color);\n  }\n\n  &.${activeClassName} {\n    color: var(--primary-color);\n  }\n`;\n\nexport default function AppNavLink({ children, title, to }) {\n  return (\n    <StyledAppNavLink\n      exact\n      to={to}\n      activeClassName={activeClassName}\n      title={title}\n    >\n      {children}\n    </StyledAppNavLink>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components/macro\";\nimport useDarkMode from \"use-dark-mode\";\n\nconst StyledDarkModeToggle = styled.label`\n  padding: 0 8px;\n`;\n\nconst Icon = styled.span`\n  font-size: 1.5rem;\n\n  :hover {\n    cursor: pointer;\n  }\n`;\n\nconst Checkbox = styled.input`\n  height: 0;\n  margin: 0;\n  visibility: hidden;\n  width: 0;\n`;\n\nexport default function DarkModeToggle() {\n  const { value, toggle } = useDarkMode(false);\n\n  return (\n    <StyledDarkModeToggle title=\"Day/night mode\">\n      <Checkbox type=\"checkbox\" onChange={toggle} />\n      <Icon>{value ? \"ðŸŒš\" : \"ðŸŒž\"}</Icon>\n    </StyledDarkModeToggle>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components/macro\";\nimport {\n  FaStackOverflow,\n  FaHackerNews,\n  FaNewspaper,\n  FaReddit,\n  FaGithub\n} from \"react-icons/fa\";\nimport AppNavLink from \"./AppNavLink\";\nimport DarkModeToggle from \"./DarkModeToggle\";\n\nconst StyledFooter = styled.footer`\n  align-items: center;\n  background: var(--background-color);\n  bottom: 0;\n  box-shadow: 0 -1px 4px 1px rgba(0, 0, 0, 0.1);\n  box-sizing: border-box;\n  display: flex;\n  list-style-type: none;\n  margin: 0;\n  min-height: 40px;\n  position: fixed;\n  justify-content: space-between;\n  width: 100%;\n`;\n\nexport default function Footer({ className }) {\n  return (\n    <StyledFooter>\n      <DarkModeToggle />\n      <div>\n        <AppNavLink to=\"/hn\" title=\"Hacker News\">\n          <FaHackerNews />\n        </AppNavLink>\n        <AppNavLink to=\"/gh\" title=\"GitHub\">\n          <FaGithub />\n        </AppNavLink>\n        <AppNavLink to=\"/so\" title=\"Stack Overflow\">\n          <FaStackOverflow />\n        </AppNavLink>\n        <AppNavLink to=\"/reddit\" title=\"Reddit\">\n          <FaReddit />\n        </AppNavLink>\n        <AppNavLink to=\"/global\" title=\"Global News\">\n          <FaNewspaper />\n        </AppNavLink>\n      </div>\n    </StyledFooter>\n  );\n}\n","import React from \"react\";\n\nexport default function Margin({ margin }) {\n  return (\n    <div\n      style={{\n        margin\n      }}\n    />\n  );\n}\n","import React, { Component } from \"react\";\nimport { FaRegSadTear } from \"react-icons/fa\";\nimport Column from \"./Column\";\n\nexport default class ErrorBoundary extends Component {\n  state = {\n    hasError: false\n  };\n\n  static getDerivedStateFromError() {\n    return {\n      hasError: true\n    };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <Column crossAxisAlignment=\"center\">\n          <FaRegSadTear size=\"3rem\" />\n          <h2>Sorry, we couldn't load that for you.</h2>\n        </Column>\n      );\n    }\n    return this.props.children;\n  }\n}\n","import React, { lazy, Suspense } from \"react\";\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport Title from \"./components/Title\";\nimport Center from \"./components/Center\";\nimport Footer from \"./components/Footer\";\nimport Margin from \"./components/Margin\";\nimport Spinner from \"./components/Spinner\";\nimport ErrorBoundary from \"./components/ErrorBoundary\";\n\nconst HackerNewsFeed = lazy(() => import(\"./components/HackerNewsFeed\"));\nconst GitHubFeed = lazy(() => import(\"./components/GitHubFeed\"));\nconst StackOverflowFeed = lazy(() => import(\"./components/StackOverflowFeed\"));\nconst RedditFeed = lazy(() => import(\"./components/RedditFeed\"));\nconst GlobalNewsFeed = lazy(() => import(\"./components/GlobalNewsFeed\"));\nconst NoMatch = lazy(() => import(\"./components/NoMatch\"));\n\nconst App = () => (\n  <BrowserRouter>\n    <Center>\n      <Title colored>\n        <h1>Informatif</h1>\n      </Title>\n    </Center>\n    <Suspense\n      fallback={\n        <Center>\n          <Spinner />\n        </Center>\n      }\n    >\n      <ErrorBoundary>\n        <Switch>\n          <Redirect exact from=\"/\" to=\"/hn\" />\n          <Route exact path=\"/hn\" component={HackerNewsFeed} />\n          <Route exact path=\"/gh\" component={GitHubFeed} />\n          <Route exact path=\"/so\" component={StackOverflowFeed} />\n          <Route exact path=\"/reddit\" component={RedditFeed} />\n          <Route exact path=\"/global\" component={GlobalNewsFeed} />\n          <Route component={NoMatch} />\n        </Switch>\n      </ErrorBoundary>\n    </Suspense>\n    <Margin margin=\"56px\" />\n    <Footer />\n  </BrowserRouter>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport { unstable_createRoot } from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nunstable_createRoot(document.getElementById(\"root\")).render(<App />);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}